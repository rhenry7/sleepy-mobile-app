{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _index = _interopRequireDefault(require(\"./index.js\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar ProgressComponent = function (_Component) {\n  (0, _inherits2.default)(ProgressComponent, _Component);\n\n  var _super = _createSuper(ProgressComponent);\n\n  function ProgressComponent(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ProgressComponent);\n    _this = _super.call(this, props);\n    _this.state = {\n      position: 0,\n      bufferedPosition: 0,\n      duration: 0\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(ProgressComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._progressUpdates = true;\n\n      this._updateProgress();\n\n      this._timer = setInterval(this._updateProgress.bind(this), 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._progressUpdates = false;\n      clearInterval(this._timer);\n    }\n  }, {\n    key: \"_updateProgress\",\n    value: function _updateProgress() {\n      var data;\n      return _regenerator.default.async(function _updateProgress$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regenerator.default.awrap(_index.default.getPosition());\n\n            case 3:\n              _context.t0 = _context.sent;\n              _context.next = 6;\n              return _regenerator.default.awrap(_index.default.getBufferedPosition());\n\n            case 6:\n              _context.t1 = _context.sent;\n              _context.next = 9;\n              return _regenerator.default.awrap(_index.default.getDuration());\n\n            case 9:\n              _context.t2 = _context.sent;\n              data = {\n                position: _context.t0,\n                bufferedPosition: _context.t1,\n                duration: _context.t2\n              };\n\n              if (this._progressUpdates) {\n                this.setState(data);\n              }\n\n              _context.next = 16;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t3 = _context[\"catch\"](0);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[0, 14]], Promise);\n    }\n  }, {\n    key: \"getProgress\",\n    value: function getProgress() {\n      if (!this.state.duration || !this.state.position) return 0;\n      return this.state.position / this.state.duration;\n    }\n  }, {\n    key: \"getBufferedProgress\",\n    value: function getBufferedProgress() {\n      if (!this.state.duration || !this.state.bufferedPosition) return 0;\n      return this.state.bufferedPosition / this.state.duration;\n    }\n  }]);\n  return ProgressComponent;\n}(_react.Component);\n\nmodule.exports = ProgressComponent;","map":{"version":3,"sources":["/Users/ramonehenry/Documents/code/codeprojects/AwesomeProject/node_modules/react-native-track-player/lib/ProgressComponent.js"],"names":["ProgressComponent","props","state","position","bufferedPosition","duration","_progressUpdates","_updateProgress","_timer","setInterval","bind","clearInterval","TrackPlayer","getPosition","getBufferedPosition","getDuration","data","setState","Component","module","exports"],"mappings":";;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;IAEMA,iB;;;;;AAEF,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,CADD;AAETC,MAAAA,gBAAgB,EAAE,CAFT;AAGTC,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAFe;AAOlB;;;;wCAEmB;AAChB,WAAKC,gBAAL,GAAwB,IAAxB;;AACA,WAAKC,eAAL;;AACA,WAAKC,MAAL,GAAcC,WAAW,CAAC,KAAKF,eAAL,CAAqBG,IAArB,CAA0B,IAA1B,CAAD,EAAkC,IAAlC,CAAzB;AACH;;;2CAEsB;AACnB,WAAKJ,gBAAL,GAAwB,KAAxB;AACAK,MAAAA,aAAa,CAAC,KAAKH,MAAN,CAAb;AACH;;;;;;;;;;;gDAW2BI,eAAYC,WAAZ,E;;;;;gDACQD,eAAYE,mBAAZ,E;;;;;gDACRF,eAAYG,WAAZ,E;;;;AAHdC,cAAAA,I;AACFb,gBAAAA,Q;AACAC,gBAAAA,gB;AACAC,gBAAAA,Q;;;AAGJ,kBAAG,KAAKC,gBAAR,EAA0B;AACtB,qBAAKW,QAAL,CAAcD,IAAd;AACH;;;;;;;;;;;;;;;;;;kCAUK;AACV,UAAG,CAAC,KAAKd,KAAL,CAAWG,QAAZ,IAAwB,CAAC,KAAKH,KAAL,CAAWC,QAAvC,EAAiD,OAAO,CAAP;AAEjD,aAAO,KAAKD,KAAL,CAAWC,QAAX,GAAsB,KAAKD,KAAL,CAAWG,QAAxC;AACH;;;0CAMqB;AAClB,UAAG,CAAC,KAAKH,KAAL,CAAWG,QAAZ,IAAwB,CAAC,KAAKH,KAAL,CAAWE,gBAAvC,EAAyD,OAAO,CAAP;AAEzD,aAAO,KAAKF,KAAL,CAAWE,gBAAX,GAA8B,KAAKF,KAAL,CAAWG,QAAhD;AACH;;;EA9D2Ba,gB;;AAkEhCC,MAAM,CAACC,OAAP,GAAiBpB,iBAAjB","sourcesContent":["import React, { Component } from 'react';\r\nimport TrackPlayer from './index.js';\r\n\r\nclass ProgressComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            position: 0,\r\n            bufferedPosition: 0,\r\n            duration: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._progressUpdates = true;\r\n        this._updateProgress();\r\n        this._timer = setInterval(this._updateProgress.bind(this), 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._progressUpdates = false;\r\n        clearInterval(this._timer);\r\n    }\r\n\r\n    /**\r\n     * Updates the progress state\r\n     * @private\r\n     */\r\n    async _updateProgress() {\r\n        // TODO check for performance here\r\n        // We can create a new native function to reduces these 3 native calls to only one, if needed\r\n        try {\r\n            const data = {\r\n                position: await TrackPlayer.getPosition(),\r\n                bufferedPosition: await TrackPlayer.getBufferedPosition(),\r\n                duration: await TrackPlayer.getDuration()\r\n            };\r\n\r\n            if(this._progressUpdates) {\r\n                this.setState(data);\r\n            }\r\n        } catch(e) {\r\n            // The player is probably not initialized yet, we'll just ignore it\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets the played progress expressed between 0 and 1\r\n     * @return {number}\r\n     */\r\n    getProgress() {\r\n        if(!this.state.duration || !this.state.position) return 0;\r\n\r\n        return this.state.position / this.state.duration;\r\n    }\r\n\r\n    /**\r\n     * Gets the buffered progress expressed between 0 and 1\r\n     * @return {number}\r\n     */\r\n    getBufferedProgress() {\r\n        if(!this.state.duration || !this.state.bufferedPosition) return 0;\r\n\r\n        return this.state.bufferedPosition / this.state.duration;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = ProgressComponent;\r\n"]},"metadata":{},"sourceType":"script"}